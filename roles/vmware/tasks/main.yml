---
- name: "VMware | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: vmware_distribution_config

- name: "VMware | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: vmware_distribution_config.stat.exists

- name: "VMware | Check if /etc/vmware/ is a symlink"
  ansible.builtin.stat:
    path: "{{ vmware_etc_path }}"
  register: vmware_etc_stat

- name: "VMware | Remove existing /etc/vmware/ if not a symlink"
  ansible.builtin.file:
    path: "{{ vmware_etc_path }}"
    state: absent
  when: vmware_etc_stat.stat.exists and not vmware_etc_stat.stat.islnk
  become: true

- name: "VMware | /etc/vmware/ directory"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ vmware_etc_path }}"
    state: directory
  become: true

- name: "VMware | Create symlink to role files/etc directory"
  ansible.builtin.file:
    src: "{{ role_path }}/files/etc"
    dest: "{{ vmware_etc_path }}"
    state: link
    force: true
  become: true

- name: "VMware | Set permissions and ownership for /etc/vmware directory (not recursive)"
  ansible.builtin.file:
    path: "{{ vmware_etc_path }}"
    state: directory
    mode: "0755"
    owner: "root"
    group: "root"
  become: true
  when: vmware_etc_stat.stat.mode != '0755' or vmware_etc_stat.stat.pw_name != 'root' or vmware_etc_stat.stat.gr_name != 'root'

- name: "VMware | Create symlink for icu"
  ansible.builtin.file:
    src: "/usr/lib/vmware/icu"
    dest: "{{ vmware_etc_path }}/icu"
    state: link
  become: true

- name: "VMware | Check if config folder is a symlink"
  ansible.builtin.stat:
    path: "{{ vmware_config_path }}"
  register: vmware_config_stat

- name: "VMware | Remove existing config folder if not a symlink"
  ansible.builtin.file:
    path: "{{ vmware_config_path }}"
    state: absent
  when: vmware_config_stat.stat.exists and not vmware_config_stat.stat.islnk
  become: true

- name: "VMware | Config folder"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ vmware_config_path }}"
    state: directory

- name: "VMware | Create symlink to role files/config directory"
  ansible.builtin.file:
    src: "{{ role_path }}/files/config"
    dest: "{{ vmware_config_path }}"
    state: link
    force: true

- name: "VMware | Set permissions for .vmware directory (not recursive)"
  ansible.builtin.file:
    path: "{{ vmware_config_path }}"
    state: directory
    mode: "0755"
  become: true
  when: vmware_config_stat.stat.mode != '0755'

- name: "VMware | Set permissions for specific files"
  ansible.builtin.file:
    path: "{{ file_item }}"
    mode: "0644"
  loop:
    - "{{ vmware_etc_path }}/vmnet1/dhcpd/dhcpd.leases"
    - "{{ vmware_etc_path }}/vmnet1/dhcpd/dhcpd.leases~"
    - "{{ vmware_etc_path }}/vmnet8/dhcpd/dhcpd.leases"
    - "{{ vmware_etc_path }}/vmnet8/dhcpd/dhcpd.leases~"
    - "{{ vmware_config_path }}/preferences"
    - "{{ vmware_config_path }}/preferences.save"
  loop_control:
    loop_var: file_item
  become: true

- name: "VMware | Enable VMware services"
  ansible.builtin.systemd:
    name: "{{ service_item }}"
    enabled: true
  loop:
    - vmware-networks.service
    - vmware-usbarbitrator.service
    - vmware-networks.path
    - vmware-usbarbitrator.path
  loop_control:
    loop_var: service_item
  become: true

- name: "VMware | Start VMware services"
  ansible.builtin.systemd:
    name: "{{ start_service_item }}"
    state: started
  loop:
    - vmware-networks.service
    - vmware-usbarbitrator.service
  loop_control:
    loop_var: start_service_item
  become: true

- name: "VMware | Create VM shutdown script and service"
  ansible.builtin.template:
    src: "{{ template_item.src }}"
    dest: "{{ template_item.dest }}"
    mode: "{{ template_item.mode }}"
    owner: root
    group: root
  loop:
    - {
        src: "{{ role_path }}/files/vmware-shutdown.sh",
        dest: "/usr/local/bin/vmware-shutdown.sh",
        mode: "0755",
      }
    - {
        src: "{{ role_path }}/files/vmware-shutdown.service.j2",
        dest: "/etc/systemd/system/vmware-shutdown.service",
        mode: "0644",
      }
  loop_control:
    loop_var: template_item
  become: true

- name: "VMware | Enable VM shutdown service"
  ansible.builtin.systemd:
    name: vmware-shutdown.service
    enabled: true
    daemon_reload: true
  become: true
