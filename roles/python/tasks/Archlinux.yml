---
- name: "Python | {{ ansible_distribution }} | Install Python and packages"
  ansible.builtin.pacman:
    name:
      - python
      - python-capng
      - python-defusedxml
      - python-packaging
      - python-pip
      - python-pyqt5
      - python-pyquery
      - python-requests
      - python-watchdog
    state: present
  become: true

- name: "Python | {{ ansible_distribution }} | Install anaconda"
  kewlfft.aur.aur:
    name: "anaconda"
    state: present

- name: "Python | {{ ansible_distribution }} | Initialize conda environment and setup zsh"
  shell: |
    source /opt/anaconda/bin/activate root
    conda init zsh
  args:
    executable: /bin/bash

- name: "Ensure CURL_CA_BUNDLE is set in .zshrc"
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    regexp: "^export CURL_CA_BUNDLE="
    line: "export CURL_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt"
    create: true

- name: "Ensure CURL_CA_BUNDLE is set in .bashrc"
  ansible.builtin.lineinfile:
    path: ~/.bashrc
    regexp: "^export CURL_CA_BUNDLE="
    line: "export CURL_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt"
    create: true

- name: "Ensure CRYPTOGRAPHY_OPENSSL_NO_LEGACY is set in .zshrc"
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    regexp: "^export CRYPTOGRAPHY_OPENSSL_NO_LEGACY="
    line: "export CRYPTOGRAPHY_OPENSSL_NO_LEGACY=1"
    create: true

- name: "Ensure CRYPTOGRAPHY_OPENSSL_NO_LEGACY is set in .bashrc"
  ansible.builtin.lineinfile:
    path: ~/.bashrc
    regexp: "^export CRYPTOGRAPHY_OPENSSL_NO_LEGACY="
    line: "export CRYPTOGRAPHY_OPENSSL_NO_LEGACY=1"
    create: true

- name: "Python | {{ ansible_distribution }} | Install pyinstaller in conda environment"
  shell: |
    source /opt/anaconda/bin/activate root
    conda install -y pyinstaller
  args:
    executable: /bin/bash
