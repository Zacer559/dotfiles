#!/bin/bash

# Source utility functions and variables
source "$(dirname "$0")/utils.sh"
source "$(dirname "$0")/os_setup.sh"

# Main setup function
main() {
  check_vault_secret
  parse_arguments "$@"
  detect_and_setup_os
  setup_ssh_keys
  clone_or_update_repository
  run_ansible_playbook
  handle_first_run
}

# Parse command-line arguments
parse_arguments() {
  while [[ "$#" -gt 0 ]]; do
    case $1 in
    -r | --roles)
      IFS=',' read -r -a ROLES_LIST <<<"$2"
      shift
      ;;
    -h | --help)
      usage
      exit 0
      ;;
    *)
      echo "Unknown option: $1"
      usage
      exit 1
      ;;
    esac
    shift
  done
}

# Setup SSH keys
setup_ssh_keys() {
  if [[ ! -f "$SSH_DIR/authorized_keys" ]]; then
    _task "Generating SSH keys"
    _cmd "mkdir -p $SSH_DIR"
    _cmd "chmod 700 $SSH_DIR"
    _cmd "ssh-keygen -b 4096 -t rsa -f $SSH_DIR/id_rsa -N '' -C $USER@$HOSTNAME"
    _cmd "cat $SSH_DIR/id_rsa.pub >> $SSH_DIR/authorized_keys"
  fi
}

# Clone or update dotfiles repository
clone_or_update_repository() {
  if [[ ! -d "$DOTFILES_DIR" ]]; then
    _task "Cloning repository"
    _cmd "git clone --quiet https://github.com/Zacer559/dotfiles.git $DOTFILES_DIR"
  else
    _task "Updating repository"
    _cmd "git -C $DOTFILES_DIR pull --quiet"
  fi

  pushd "$DOTFILES_DIR" >/dev/null 2>&1
  update_ansible_galaxy "$ID"
  popd >/dev/null 2>&1
}

# Run Ansible playbook
run_ansible_playbook() {
  _task "Running playbook"
  _task_done
  pushd "$DOTFILES_DIR" >/dev/null 2>&1
  local playbook_command="ansible-playbook -i $INVENTORY_FILE"

  if [[ -f "$VAULT_SECRET" ]]; then
    playbook_command="$playbook_command --vault-password-file $VAULT_SECRET"
  fi

  if [[ ${#ROLES_LIST[@]} -gt 0 ]]; then
    playbook_command="$playbook_command -e roles_list=${ROLES_LIST[*]}"
  fi
  playbook_command="$playbook_command $DOTFILES_DIR/main.yml"
  $playbook_command

  popd >/dev/null 2>&1
}

# Handle first run
handle_first_run() {
  if [[ ! -f "$IS_FIRST_RUN" ]]; then
    print_success "First run complete!"
    print_info "Please reboot your computer to complete the setup."
    touch "$IS_FIRST_RUN"
  fi
}

# Run the main function
main "$@"
